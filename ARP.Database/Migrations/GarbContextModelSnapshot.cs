// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using garb.Data;

namespace ARP.Database.Migrations
{
    [DbContext(typeof(GarbContext))]
    partial class GarbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("garb.Models.Build", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BuildName")
                        .IsRequired();

                    b.Property<DateTime>("ModificationTime");

                    b.Property<string>("ModifiedByUser")
                        .HasMaxLength(100);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasAlternateKey("ProjectName", "BuildName");

                    b.HasIndex("ModifiedByUser");

                    b.ToTable("Builds");
                });

            modelBuilder.Entity("garb.Models.Comparison", b =>
                {
                    b.Property<Guid>("SourceScreenInBuildId");

                    b.Property<Guid>("TargetScreenInBuildId");

                    b.Property<double>("Difference");

                    b.HasKey("SourceScreenInBuildId", "TargetScreenInBuildId");

                    b.HasIndex("TargetScreenInBuildId");

                    b.ToTable("Comparisons");
                });

            modelBuilder.Entity("garb.Models.Issue", b =>
                {
                    b.Property<Guid>("IssueId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Height");

                    b.Property<string>("Identifier");

                    b.Property<int>("IssueSeverity");

                    b.Property<int>("IssueStatus");

                    b.Property<int>("IssueType");

                    b.Property<string>("LocaleCode")
                        .HasMaxLength(32);

                    b.Property<DateTime>("ModificationTime");

                    b.Property<string>("ModifiedByUser")
                        .HasMaxLength(100);

                    b.Property<Guid>("ModifiedInBuildId");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(100);

                    b.Property<string>("ScreenName")
                        .HasMaxLength(260);

                    b.Property<string>("Value");

                    b.Property<int>("Width");

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.HasKey("IssueId");

                    b.HasIndex("LocaleCode");

                    b.HasIndex("ModifiedByUser");

                    b.HasIndex("ModifiedInBuildId");

                    b.HasIndex("ScreenName", "ProjectName");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("garb.Models.IssueRevision", b =>
                {
                    b.Property<Guid>("IssueId");

                    b.Property<int>("RevisionNo");

                    b.Property<int>("Height");

                    b.Property<string>("Identifier");

                    b.Property<int>("IssueSeverity");

                    b.Property<int>("IssueStatus");

                    b.Property<int>("IssueType");

                    b.Property<string>("LocaleCode")
                        .HasMaxLength(32);

                    b.Property<DateTime>("ModificationTime");

                    b.Property<string>("ModifiedByUser")
                        .HasMaxLength(100);

                    b.Property<Guid>("ModifiedInBuildId");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(100);

                    b.Property<string>("ScreenName")
                        .HasMaxLength(260);

                    b.Property<string>("Value");

                    b.Property<int>("Width");

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.HasKey("IssueId", "RevisionNo");

                    b.ToTable("IssueRevisions");
                });

            modelBuilder.Entity("garb.Models.Locale", b =>
                {
                    b.Property<string>("LocaleCode")
                        .HasMaxLength(32);

                    b.Property<string>("LocaleName");

                    b.HasKey("LocaleCode");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("garb.Models.Project", b =>
                {
                    b.Property<string>("ProjectName")
                        .HasMaxLength(100);

                    b.HasKey("ProjectName");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("garb.Models.Screen", b =>
                {
                    b.Property<string>("ScreenName")
                        .HasMaxLength(260);

                    b.Property<string>("ProjectName")
                        .HasMaxLength(100);

                    b.HasKey("ScreenName", "ProjectName");

                    b.HasIndex("ProjectName");

                    b.ToTable("Screens");
                });

            modelBuilder.Entity("garb.Models.ScreenInBuild", b =>
                {
                    b.Property<Guid>("ScreenInBuildId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BuildId");

                    b.Property<string>("LocaleCode")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.Property<DateTime>("ModificationTime");

                    b.Property<string>("ModifiedByUser")
                        .HasMaxLength(100);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ScreenName")
                        .IsRequired()
                        .HasMaxLength(260);

                    b.Property<string>("ScreenUrl");

                    b.HasKey("ScreenInBuildId");

                    b.HasAlternateKey("ProjectName", "ScreenName", "LocaleCode", "BuildId");

                    b.HasIndex("BuildId");

                    b.HasIndex("LocaleCode");

                    b.HasIndex("ModifiedByUser");

                    b.HasIndex("ScreenName", "ProjectName");

                    b.ToTable("ScreensInBuilds");
                });

            modelBuilder.Entity("garb.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(100);

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("garb.Models.Build", b =>
                {
                    b.HasOne("garb.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ModifiedByUser")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("garb.Models.Project", "Project")
                        .WithMany("Builds")
                        .HasForeignKey("ProjectName")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("garb.Models.Comparison", b =>
                {
                    b.HasOne("garb.Models.ScreenInBuild", "SourceScreenInBuild")
                        .WithMany()
                        .HasForeignKey("SourceScreenInBuildId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("garb.Models.ScreenInBuild", "TargetScreenInBuild")
                        .WithMany()
                        .HasForeignKey("TargetScreenInBuildId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("garb.Models.Issue", b =>
                {
                    b.HasOne("garb.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("LocaleCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("garb.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ModifiedByUser")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("garb.Models.Build", "Build")
                        .WithMany()
                        .HasForeignKey("ModifiedInBuildId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("garb.Models.Screen", "Screen")
                        .WithMany("Issues")
                        .HasForeignKey("ScreenName", "ProjectName")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("garb.Models.IssueRevision", b =>
                {
                    b.HasOne("garb.Models.Issue", "Issue")
                        .WithMany("IssueRevisions")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("garb.Models.Screen", b =>
                {
                    b.HasOne("garb.Models.Project", "Project")
                        .WithMany("Screens")
                        .HasForeignKey("ProjectName")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("garb.Models.ScreenInBuild", b =>
                {
                    b.HasOne("garb.Models.Build", "Build")
                        .WithMany()
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("garb.Models.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("LocaleCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("garb.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ModifiedByUser")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("garb.Models.Screen", "Screen")
                        .WithMany("ScreensInBuilds")
                        .HasForeignKey("ScreenName", "ProjectName")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}

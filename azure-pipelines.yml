# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  workingDirectory: 'arp-uploader'
  displayName: 'npm install and build'

- script: |
    npm run testWithCoverage
  workingDirectory: 'arp-uploader'
  displayName: 'npm testWithCoverage'

- script: |
    npm publish --dry-run
  workingDirectory: 'arp-uploader'
  displayName: 'npm publish --dry-run'

- script: |
    docker build -t $(dockerId)/$(imageName) .
  displayName: 'docker build'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: 'arp-uploader/junitresults.xml'

- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/arp-uploader/coverage/cobertura-coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/arp-uploader/coverage'

- script: |
    docker login -u $(dockerId) -p $(dockerPswd)
    docker push $(dockerId)/$(imageName)
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  displayName: 'docker push'

- task: Npm@1
  condition: and(succeeded(), and(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['publishNpm'], 'true')))
  inputs:
    command: publish
    publishEndpoint: 'npmjs'
    workingDir: 'arp-uploader'
